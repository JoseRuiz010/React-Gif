{"version":3,"sources":["Components/AddCategory.js","helpers/getGif.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","add","useState","inputValue","setinputValue","onSubmit","e","preventDefault","cats","console","log","onChange","target","value","type","placeholder","getGif","category","a","URL","fetch","res","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","imagenes","key","GifExpertApp","categories","setCategories","c","i","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAEe,SAASA,EAAT,GAA+B,IAARC,EAAO,EAAPA,IACpC,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAOA,OACE,8CAEE,sBAAMC,SATW,SAACC,GACpBA,EAAEC,iBACFJ,GAAcF,GAAI,SAACO,GAAD,OAAWL,GAAX,mBAA0BK,OAE5CC,QAAQC,IAAI,UAKV,SACE,uBACEC,SAAU,SAACL,GAAD,OAAOF,EAAcE,EAAEM,OAAOC,QACxCA,MAAOV,EACPW,KAAK,OACLC,YAAa,mC,kCClBVC,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,0FAC2EF,EAD3E,sBAGFG,MAAMD,GAHJ,cAGdE,EAHc,gBAIGA,EAAIC,OAJP,uBAIZC,EAJY,EAIZA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAKH,EAAII,OAAOC,iBAAiBF,QAVjB,kBAabL,GAba,4CAAH,sDCEJ,SAASQ,EAAT,GAAyC,EAAlBL,GAAmB,IAAfC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,IAC/C,OACE,sBAAKI,UAAU,yCAAf,UACE,qBAAKC,IAAKL,EAAKM,IAAKP,IACpB,kCAAKA,QCFI,SAASQ,EAAT,GAAgC,IAAbnB,EAAY,EAAZA,SAChC,ECF0B,SAACA,GAC3B,MAA0Bf,mBAAS,CACjCqB,KAAM,GACNc,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACRxB,EAAOC,GAAUwB,MAAK,SAACf,GACrBa,EAAS,CACPhB,KAAMG,EACNW,SAAS,SAGZ,CAACpB,IAEGqB,EDb6BI,CAAazB,GAAzCoB,EAAR,EAAQA,QAAeM,EAAvB,EAAiBpB,KAEjB,OACE,sBAAKU,UAAU,YAAf,UACE,6BAAKhB,IACJoB,GACC,oBAAIJ,UAAU,mCAAd,0BAEDU,EAASlB,KAAI,SAACC,GAAD,OACZ,wBAACM,EAAD,2BAAiBN,GAAjB,IAAsBkB,IAAKlB,EAAIC,KAC5B,WEXI,SAASkB,IACtB,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAO4C,EAAP,KAAmBC,EAAnB,KAEA,OACE,gCACE,8CACA,uBACA,cAAC/C,EAAD,CAAaC,IAAK8C,IAElB,6BACGD,EAAWrB,KAAI,SAACuB,EAAGC,GAAJ,OACd,cAACb,EAAD,CAASnB,SAAU+B,GAAQC,W,MCVrCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACP,EAAD,MAEFQ,SAASC,eAAe,W","file":"static/js/main.6de45896.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nexport default function AddCategory({ add }) {\r\n  const [inputValue, setinputValue] = useState(\"\");\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    inputValue && add((cats) => [inputValue, ...cats]);\r\n\r\n    console.log(\"Enter\");\r\n  };\r\n  return (\r\n    <div>\r\n      AddCategory\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          onChange={(e) => setinputValue(e.target.value)}\r\n          value={inputValue}\r\n          type=\"text\"\r\n          placeholder={\"Ingrese el nombre del Gif\"}\r\n        ></input>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  add: PropTypes.func.isRequired,\r\n};\r\n","export const getGif = async (category) => {\r\n  const URL = `https://api.giphy.com/v1/gifs/search?api_key=nHrb6A9qBiL6nbCLSqKmei6tL1fe0Gaf&q=${category}&limit=10`;\r\n\r\n  const res = await fetch(URL);\r\n  const { data } = await res.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images.downsized_medium.url,\r\n    };\r\n  });\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\n\r\nexport default function GifGridItem({ id, title, url }) {\r\n  return (\r\n    <div className=\"card animate__animated animate__bounce\">\r\n      <img src={url} alt={title}></img>\r\n      <p> {title}</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport GifGridItem from \"./GifGridItem\";\r\n\r\nexport default function GifGrid({ category }) {\r\n  const { loading, data: imagenes } = useFetchGifs(category);\r\n\r\n  return (\r\n    <div className=\"card-grid\">\r\n      <h1>{category}</h1>\r\n      {loading && (\r\n        <h1 className=\"animate__animated animate__flash\">Cargando ...</h1>\r\n      )}\r\n      {imagenes.map((img) => (\r\n        <GifGridItem {...img} key={img.id}>\r\n          {\" \"}\r\n        </GifGridItem>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGif } from \"../helpers/getGif\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGif(category).then((img) => {\r\n      setstate({\r\n        data: img,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport AddCategory from \"./Components/AddCategory\";\r\nimport GifGrid from \"./Components/GifGrid\";\r\n\r\nexport default function GifExpertApp() {\r\n  const [categories, setCategories] = useState([\"One Punch\"]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>GifExpertApp</h2>\r\n      <hr></hr>\r\n      <AddCategory add={setCategories}></AddCategory>\r\n\r\n      <ol>\r\n        {categories.map((c, i) => (\r\n          <GifGrid category={c} key={i}></GifGrid>\r\n        ))}\r\n      </ol>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GifExpertApp from \"./GifExpertApp\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp></GifExpertApp>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}